{"ast":null,"code":"var _jsxFileName = \"D:\\\\Taskify\\\\client\\\\taskify-frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { useRef, useEffect } from 'react';\nimport gsap from 'gsap';\nimport './App.css';\nconst Login = () => {\n  const formRef = useRef(null);\n  useEffect(() => {\n    // Use GSAP to animate the form when the component mounts\n    gsap.from(formRef.current, {\n      duration: 1,\n      opacity: 0,\n      y: -50,\n      ease: 'power2.out'\n    });\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Add your login logic here\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Login\")));\n};\nexport default Login;","map":{"version":3,"names":["React","useRef","useEffect","gsap","Login","formRef","from","current","duration","opacity","y","ease","handleSubmit","e","preventDefault","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","required"],"sources":["D:/Taskify/client/taskify-frontend/src/components/Login.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport gsap from 'gsap';\r\nimport './App.css';\r\nconst Login = () => {\r\n  const formRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Use GSAP to animate the form when the component mounts\r\n    gsap.from(formRef.current, { duration: 1, opacity: 0, y: -50, ease: 'power2.out' });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Add your login logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form ref={formRef} onSubmit={handleSubmit}>\r\n        <label>\r\n          Email:\r\n          <input type=\"email\" required />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" required />\r\n        </label>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAO,WAAW;AAClB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,OAAO,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE5BC,SAAS,CAAC,MAAM;IACd;IACAC,IAAI,CAACG,IAAI,CAACD,OAAO,CAACE,OAAO,EAAE;MAAEC,QAAQ,EAAE,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;EACrF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEd,KAAA,CAAAe,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BtB,KAAA,CAAAe,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,eACdtB,KAAA,CAAAe,aAAA;IAAMQ,GAAG,EAAElB,OAAQ;IAACmB,QAAQ,EAAEZ,YAAa;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzCtB,KAAA,CAAAe,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,QAEL,eAAAtB,KAAA,CAAAe,aAAA;IAAOU,IAAI,EAAC,OAAO;IAACC,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzB,CAAC,eACRtB,KAAA,CAAAe,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,WAEL,eAAAtB,KAAA,CAAAe,aAAA;IAAOU,IAAI,EAAC,UAAU;IAACC,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5B,CAAC,eACRtB,KAAA,CAAAe,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAa,CAC/B,CACH,CAAC;AAEV,CAAC;AAED,eAAelB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}