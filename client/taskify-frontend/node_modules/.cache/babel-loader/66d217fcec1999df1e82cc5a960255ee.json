{"ast":null,"code":"var _jsxFileName = \"D:\\\\Taskify\\\\client\\\\taskify-frontend\\\\src\\\\components\\\\Todo\\\\Profile.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './Profile.css';\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nconst Profile = () => {\n  var _Object$keys;\n  const [userdata, setUserdata] = useState({});\n  console.log(\"response\", userdata);\n  const getUser = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:1000/login/success\", {\n        withCredentials: true\n      });\n      console.log(\"User data fetched:\", response.data.user);\n      setUserdata(response.data.user);\n    } catch (error) {\n      console.log(\"Error fetching user data:\", error);\n    }\n  };\n  useEffect(() => {\n    getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, (Object === null || Object === void 0 ? void 0 : (_Object$keys = Object.keys(userdata)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 37\n    }\n  }, \"Profil\"))) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  })))));\n};\nexport default Profile;","map":{"version":3,"names":["React","useEffect","useState","NavLink","axios","Profile","_Object$keys","userdata","setUserdata","console","log","getUser","response","get","withCredentials","data","user","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","length","Fragment","to"],"sources":["D:/Taskify/client/taskify-frontend/src/components/Todo/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Profile.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Profile = () => {\r\n    const [userdata, setUserdata] = useState({});\r\n    console.log(\"response\", userdata);\r\n\r\n    const getUser = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://localhost:1000/login/success\", { withCredentials: true });\r\n            console.log(\"User data fetched:\", response.data.user);\r\n            setUserdata(response.data.user);\r\n        } catch (error) {\r\n            console.log(\"Error fetching user data:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, []);\r\n\r\n    return (\r\n        <header>\r\n        <nav>\r\n         \r\n            <div className=\"right\">\r\n                <ul>\r\n                    \r\n                    {\r\n                        Object?.keys(userdata)?.length > 0 ? (\r\n                            <>\r\n                       \r\n                                \r\n                                <li>\r\n                                    <NavLink to=\"/profile\">\r\n                                        Profil\r\n                                    </NavLink>\r\n                                </li>\r\n                                \r\n                               \r\n                            </>\r\n                        ) : <li>\r\n                          \r\n                        </li>\r\n                    }\r\n\r\n\r\n\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAA,IAAAC,YAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5CO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;EAEjC,MAAMI,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,qCAAqC,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC;MAClGL,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;MACrDR,WAAW,CAACI,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZR,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEO,KAAK,CAAC;IACnD;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZU,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACAxB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEIxB,KAAA,CAAAkB,aAAA;IAAKO,SAAS,EAAC,OAAO;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBxB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAGQ,CAAAE,MAAM,aAANA,MAAM,wBAAApB,YAAA,GAANoB,MAAM,CAAEC,IAAI,CAACpB,QAAQ,CAAC,cAAAD,YAAA,uBAAtBA,YAAA,CAAwBsB,MAAM,IAAG,CAAC,gBAC9B5B,KAAA,CAAAkB,aAAA,CAAAlB,KAAA,CAAA6B,QAAA,qBAGI7B,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIxB,KAAA,CAAAkB,aAAA,CAACf,OAAO;IAAC2B,EAAE,EAAC,UAAU;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAEd,CACT,CAGN,CAAC,gBACHxB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEA,CAKR,CACH,CACJ,CACD,CAAC;AAEb,CAAC;AAED,eAAenB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}